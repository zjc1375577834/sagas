<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-lazy-init="true" default-autowire="byName">

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url">
            <value>${jdbc.druid.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.druid.user}</value>
        </property>
        <property name="password">
            <bean class="com.tongbanjie.commons.support.spring.EncryptDBPasswordFactory">
                <property name="password" value="${jdbc.druid.password}"/>
            </bean>
        </property>
        <property name="filters">
            <value>${jdbc.druid.filters}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.druid.maxActive}</value>
        </property>
        <property name="initialSize">
            <value>${jdbc.druid.initialSize}</value>
        </property>
        <property name="maxWait">
            <value>${jdbc.druid.maxWait}</value>
        </property>
        <property name="minIdle">
            <value>${jdbc.druid.minIdle}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis">
            <value>${jdbc.druid.timeBetweenEvictionRunsMillis}</value>
        </property>
        <property name="minEvictableIdleTimeMillis">
            <value>${jdbc.druid.minEvictableIdleTimeMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.druid.validationQuery}</value>
        </property>
        <property name="testWhileIdle">
            <value>${jdbc.druid.testWhileIdle}</value>
        </property>
        <property name="testOnBorrow">
            <value>${jdbc.druid.testOnBorrow}</value>
        </property>
        <property name="testOnReturn">
            <value>${jdbc.druid.testOnReturn}</value>
        </property>
        <property name="poolPreparedStatements">
            <value>${jdbc.druid.poolPreparedStatements}</value>
        </property>
        <property name="maxOpenPreparedStatements">
            <value>${jdbc.druid.maxOpenPreparedStatements}</value>
        </property>
        <!--  超过时间限制是否回收
        <property name="removeAbandoned" value="true" />
        超时时间；单位为秒。180秒=3分钟
        <property name="removeAbandonedTimeout" value="90" />
        关闭abanded连接时输出错误日志
        <property name="logAbandoned" value="true" /> -->
    </bean>
    <!-- myBatis文件 -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation">
            <value>classpath:META-INF/mybatis/pay-configuration.xml</value>
        </property>
        <property name="mapperLocations">
            <list>
                <value>classpath:META-INF/mybatis/pay/*.xml</value>
                <value>classpath:META-INF/mybatis/payment/*.xml</value>
                <value>classpath:META-INF/mybatis_in_jar_consistent_message/*.xml</value>
            </list>
        </property>
        <property name="dataSource" ref="shardingDataSource"/>
    </bean>

    <!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource" />
    </bean>

    <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
        <property name="name" value="tbjTransaction"></property>
    </bean>
    <bean id="newTransactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRES_NEW"/>
    </bean>


    <!-- 序号生成服务 -->
    <bean name="sequenceService"
          class="com.tongbanjie.finsupport.component.sequence.SequenceService">
        <property name="dataSourceName" value="dataSource"></property>
    </bean>
	
	<bean name="backupService" class="com.tongbanjie.backup.service.impl.BackupServiceImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
</beans>
